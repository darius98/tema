name: Check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-gcc:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_type: [ Debug, Release ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Check
        run: ${{github.workspace}}/ci-check.sh
        env:
          CC: gcc
          CXX: g++
          CMAKE_BUILD_TYPE: ${{ matrix.build_type }}

  check-clang-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        build_type: [ Debug, Release ]
    steps:
    - uses: actions/checkout@v3

    - name: Check
      run: ${{github.workspace}}/ci-check.sh
      env:
        CC: clang
        CXX: clang++
        CMAKE_BUILD_TYPE: ${{ matrix.build_type }}

  check-clang-linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_type: [ Debug, Release ]
    steps:
      - uses: actions/checkout@v3

      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"
          directory: ${{github.workspace}}/llvm

      - name: Check
        run: ${{github.workspace}}/ci-check.sh
        env:
          CC: clang
          CXX: clang++
          CMAKE_BUILD_TYPE: ${{ matrix.build_type }}

  static-analysis:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"
          directory: ${{github.workspace}}/llvm

      - name: Check
        run: ${{github.workspace}}/ci-check.sh analyze
        env:
          CC: clang
          CXX: clang++
          CMAKE_BUILD_TYPE: Debug
